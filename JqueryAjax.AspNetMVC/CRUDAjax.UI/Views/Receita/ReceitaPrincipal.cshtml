@model CRUDAjax.UI.Models.Model.ReceitaModel
@{
    ViewBag.Title = "SINGLE PAGE APPLICATION";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section id="conteudo" class="container">
    <div class="form-group">
        <section id="formulario">
            <form action="/" method="post" id="formDados">
                <div class="row">
                    <div class="col-md-5">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-8">
                                        <div class="form-group">
                                            <h3 for="nome">Título da receita: </h3>
                                            <input type="text" id="tituloReceita" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-md-4 text-center">
                                        <div class="form-group">
                                            <img id="imagem" class=newbtn src="~/Images/nophotoII.jpg" style="width:100px; height:90px; cursor:pointer" />
                                            <input id="pic" class='pis' onchange="readURL(this);" type="file" style="display:none">
                                            <input id="imagemArrayBytes" type="text" style="display:none"/>
                                        </div>
                                    </div>
                                </div>
                                <h3 for="nome">Ingredientes: </h3>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <input type="text" id="ingrediente" class="form-control" placeholder="Digite o ingrediente..." />
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <input type="number" id="qdta" class="form-control" value="1" />
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <select class="form-control" id="tipoQtda">
                                                <option>Quantidade</option>
                                                <option>Gramas</option>
                                            </select>
                                        </div>
                                    </div>
                                    <button class="btn btn-primary" type="button" onclick="adicionaIngrediente()">Adicionar</button>
                                </div>
                                <table class="table table-striped table-condensed tab" id="tblItemReceita">
                                    <thead>
                                        <tr>
                                            <th>Item</th>
                                            <th>Qtda</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                                <hr />
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <h3>Modo de preparo</h3>
                                            <textarea class="form-control" id="modoPreparo" placeholder="Informe o modo de preparo da receita..." rows="4" style="max-height:100%"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <hr />
                                <button class="btn btn-primary" type="button" id="btnSalvar" style="text-align:right" onclick="salvaReceita()"> Salvar Receita</button>
                                <div class="loader" id="carregando" style="text-align:center; display:none"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <h2 style="text-align:center">Receitas</h2>
                                <hr />
                                <div class="row">
                                    @foreach (var item in Model.listaReceitas)
                                    {
                                        <div class="col-md-6">
                                            <div class="panel panel-default card btn" style="width: 100%" onclick="VerReceita(@item.idReceita)">
                                                <div class="panel-body">
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <img id="imagemH" src="@item.imagemArrayBytes" style="width: 100px; height:80px" />
                                                        </div>
                                                        <div class="col-md-6" style="white-space:normal">
                                                            <h3 style="color:#707070; font-size:22px"> @item.tituloReceita</h3>
                                                            <p style="font-size:10px">@item.informacaoNutricional.calorias calorias</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </section>
    </div>
</section>

<div class="modal fade" id="modal" data-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true">
</div>
<style>

    .card {
        box-shadow: 3px 3px 5px 0 #ccc;
        border-radius: 10px;
    }

        .card:hover {
            box-shadow: 0 20px 60px rgba(0,0,0,.2);
        }
</style>
<script>
    function VerReceita(idReceita) {
        $("#modal").load("VerReceita?idReceita=" + idReceita, function (response, status, xhr) {
            $("#modal").modal();
        });
    }

    $(document).ready(function () {
        (function (document) {
            var input = document.getElementById("pic"),
                output = document.getElementById("imagemArrayBytes"),
                fileData; // We need fileData to be visible to getBuffer.

            // Eventhandler for file input.
            function openfile(evt) {
                var files = input.files;
                // Pass the file to the blob, not the input[0].
                fileData = new Blob([files[0]]);
                // Pass getBuffer to promise.
                var promise = new Promise(getBuffer);
                // Wait for promise to be resolved, or log error.
                promise.then(function (data) {
                    // Here you can pass the bytes to another function.
                    output.innerHTML = data.toString();
                    console.log(data);
                }).catch(function (err) {
                    console.log('Error: ', err);
                });
            }

            /*
              Create a function which will be passed to the promise
              and resolve it when FileReader has finished loading the file.
            */
            function getBuffer(resolve) {
                var reader = new FileReader();
                reader.readAsArrayBuffer(fileData);
                reader.onload = function () {
                    var arrayBuffer = reader.result
                    var bytes = new Uint8Array(arrayBuffer);
                    resolve(bytes);
                    $("#imagemArrayBytes").val(bytes);
                }
            }

            // Eventlistener for file input.
            input.addEventListener('change', openfile, false);
        }(document));
    });

    $('.newbtn').bind("click", function () {
        $('#pic').click();
    });

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#imagem')
                    .attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    function salvaReceita() {
        var receita = new Object();

        receita.tituloReceita = $("#tituloReceita").val();
        receita.modoPreparo = $("#modoPreparo").val();
        receita.imagemArrayBytes = $("#imagemArrayBytes").val();

        receita.listaIngrediente = new Array();

        $('#tblItemReceita tbody tr').each(function (i, linha) {
            var obj = new Object();
            obj.nomeIngrediente = $(linha).find('td:eq(0)').text();
            obj.qtda = $(linha).find('td:eq(1)').text();

            receita.listaIngrediente.push(obj);
        });

        //Traduz a receita
        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '../Receita/TraduzReceita',
            data: JSON.stringify({
                receita: receita
            }),
            beforeSend: function () {
                $("#btnSalvar").focus();
                $('#btnSalvar').hide();
                $('#carregando').show();
            },
            success: function (data) {
                var vetorIng = new Array();

                for (var i = 0; i < data.receitaTraduzida.listaIngrediente.length; i++) {

                    if (data.receitaTraduzida.listaIngrediente[i].qtda.indexOf("grams")) {
                        vetorIng.push(data.receitaTraduzida.listaIngrediente[i].qtda + " of " +
                            data.receitaTraduzida.listaIngrediente[i].nomeIngrediente);
                    }
                    else {
                        vetorIng.push(data.receitaTraduzida.listaIngrediente[i].qtda.replace("x", "") + " " +
                            data.receitaTraduzida.listaIngrediente[i].nomeIngrediente);
                    }
                }

                var ingredientes = {
                    "title": data.receitaTraduzida.tituloReceita,
                    "prep": data.receitaTraduzida.modoPreparo,
                    "yield": "About 15 servings",
                    "ingr": vetorIng
                }

                var url = "https://api.edamam.com/api/nutrition-details";
                url += "?app_id=556c497d";
                url += "&app_key=dcd3f6b9c5237a47577b4c1673bd56c7"

                $.ajax({
                    type: "POST",
                    contentType: "application/json",
                    url: url,
                    data: JSON.stringify(ingredientes),
                    dataType: "json",
                }).then(function (response) {

                    receita.informacaoNutricional = new Object();

                    receita.informacaoNutricional.calorias = response.calories; // calorias
                    receita.informacaoNutricional.carboidratos = response.totalDaily.CHOCDF.quantity; // carboidratos
                    receita.informacaoNutricional.gordurasTotais = response.totalDaily.FAT.quantity; // gorduras totais
                    receita.informacaoNutricional.gordurasSaturadas = response.totalDaily.FASAT.quantity; // gorduras saturadas
                    receita.informacaoNutricional.acucar = response.totalNutrients.SUGAR.quantity; //açúcar
                    receita.informacaoNutricional.sodio = response.totalDaily.NA.quantity; // sodio
                    receita.informacaoNutricional.proteina = response.totalDaily.PROCNT.quantity; //proteina
                    receita.informacaoNutricional.fibra = response.totalDaily.FIBTG.quantity; // fibra


                    //Por fim insere a receita completa com suas informações nutricionais
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: '../Receita/InserirReceita',
                        data: JSON.stringify({
                            receita: receita
                        }),
                        beforeSend: function () {
                            $("#btnSalvar").focus();
                            $('#btnSalvar').hide();
                            $('#carregando').show();
                        },
                        success: function (msg) {
                            alert(msg);

                            //Da refresh na pagina
                            location.reload();
                        }, error: function (request, status, error) {
                            $('#btnSalvar').show();
                            $('#carregando').hide();

                            alert("Erro");
                        },
                        complete: function () {
                            $('#btnSalvar').show();
                            $('#carregando').hide();
                        },
                    });
                });
            },
            error: function (request, status, error) {
                $('#btnSalvar').show();
                $('#carregando').hide();

                alert("Erro");
            },
            complete: function () {
            },
        });
    }

    function adicionaIngrediente() {
        var ingrediente = $("#ingrediente").val();
        var qdta = $("#qdta").val();
        var tipoQtda = $("#tipoQtda").val();

        if (tipoQtda === "Quantidade") {
            qdta += " x";
        }
        else {
            qdta += " gramas";
        }

        AdicionarLinhaTabela($('#tblItemReceita'), ingrediente, qdta);
    }

    //adiciona linha na tabela recebendo parametros do click btnAdicionar
    function AdicionarLinhaTabela(table, ingrediente, qdta) {
        var tr = $('<tr></tr>');

        tr.append('<td style="white-space: nowrap;">' + ingrediente + '</td>');
        tr.append('<td style="white-space: nowrap;">' + qdta + '</td>');
        tr.append('<td style="white-space: nowrap; text-align:center">' + ' <button class="btn btn-danger btn-xs" onclick="RemoveItem(this)" type="button">Remover</button>' + '</td>');

        table.append(tr);

        $("#ingrediente").val("");
        $("#qdta").val("");
    }

    //Remove Linha tabela, tirando membro da célula
    (function ($) {
        RemoveItem = function (handler) {
            var tr = $(handler).closest('tr');
            tr.fadeOut(300, function () {
                tr.remove();
            });
        };
    })(jQuery);


    function adicionaReceita() {

        var receita = new Object();

        receita.tituloReceita = $("#tituloReceita").val();
        receita.modoPreparo = $("#modoPreparo").val();

        receita.listaIngrediente = new Array;
        var obj = new Object();

        $('#tblItemReceita tbody tr').each(function (i, linha) {
            obj.ingrediente = $(linha).find('td:eq(0)').text();
            obj.qtda = $(linha).find('td:eq(1)').text();

            listaIngrediente.push(obj);
        });


    }

    $(document).ready(function () {


    });
</script>
<link href="~/Content/GifLoad.css" rel="stylesheet" />
@*@section scripts{
        <script src="~/Scripts/App/CrudApp.js"></script>
    }*@
